{"abi":[{"type":"constructor","inputs":[{"name":"_minter","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setMinter","inputs":[{"name":"_minter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"event","name":"MinterUpdated","inputs":[{"name":"oldMinter","type":"address","indexed":true,"internalType":"address"},{"name":"newMinter","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506040516105fb3803806105fb833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b61056e8061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a082311461013257806395d89b41146101605780639dc29fac14610185578063a9059cbb14610198578063fca3b5aa146101bb57600080fd5b806306fdde031461009857806307546172146100d8578063313ce5671461010357806340c10f191461011d575b600080fd5b6100c26040518060400160405280600b81526020016a48756e7420506f696e747360a81b81525081565b6040516100cf919061041c565b60405180910390f35b6000546100eb906001600160a01b031681565b6040516001600160a01b0390911681526020016100cf565b61010b600081565b60405160ff90911681526020016100cf565b61013061012b366004610486565b6101ce565b005b6101526101403660046104b0565b60016020526000908152604090205481565b6040519081526020016100cf565b6100c260405180604001604052806006815260200165121413d2539560d21b81525081565b610130610193366004610486565b610274565b6101ab6101a6366004610486565b610360565b60405190151581526020016100cf565b6101306101c93660046104b0565b610397565b6000546001600160a01b031633146102015760405162461bcd60e51b81526004016101f8906104d2565b60405180910390fd5b6001600160a01b0382166000908152600160205260408120805483929061022990849061050c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6000546001600160a01b0316331461029e5760405162461bcd60e51b81526004016101f8906104d2565b6001600160a01b0382166000908152600160205260409020548111156102f55760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b60448201526064016101f8565b6001600160a01b0382166000908152600160205260408120805483929061031d908490610525565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610268565b60405162461bcd60e51b81526020600482015260096024820152681cdbdd5b189bdd5b9960ba1b60448201526000906064016101f8565b6000546001600160a01b031633146103c15760405162461bcd60e51b81526004016101f8906104d2565b600080546040516001600160a01b03808516939216917f1cf2de25c5bf439ac0287061c3a0fa69b3b02867d0ccfd2ded34e42577050b7391a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b602081526000825180602084015260005b8181101561044a576020818601810151604086840101520161042d565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461048157600080fd5b919050565b6000806040838503121561049957600080fd5b6104a28361046a565b946020939093013593505050565b6000602082840312156104c257600080fd5b6104cb8261046a565b9392505050565b6020808252600a90820152693737ba1036b4b73a32b960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051f5761051f6104f6565b92915050565b8181038181111561051f5761051f6104f656fea26469706673582212203ae3c05255d091ea8a83e488ae820b2191ceb1a93205390c2fcdd263c07e034664736f6c634300081c0033","sourceMap":"58:1188:1:-:0;;;571:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;610:6;:16;;-1:-1:-1;;;;;;610:16:1;-1:-1:-1;;;;;610:16:1;;;;;;;;;;58:1188;;14:290:22;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:22;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:22:o;:::-;58:1188:1;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a082311461013257806395d89b41146101605780639dc29fac14610185578063a9059cbb14610198578063fca3b5aa146101bb57600080fd5b806306fdde031461009857806307546172146100d8578063313ce5671461010357806340c10f191461011d575b600080fd5b6100c26040518060400160405280600b81526020016a48756e7420506f696e747360a81b81525081565b6040516100cf919061041c565b60405180910390f35b6000546100eb906001600160a01b031681565b6040516001600160a01b0390911681526020016100cf565b61010b600081565b60405160ff90911681526020016100cf565b61013061012b366004610486565b6101ce565b005b6101526101403660046104b0565b60016020526000908152604090205481565b6040519081526020016100cf565b6100c260405180604001604052806006815260200165121413d2539560d21b81525081565b610130610193366004610486565b610274565b6101ab6101a6366004610486565b610360565b60405190151581526020016100cf565b6101306101c93660046104b0565b610397565b6000546001600160a01b031633146102015760405162461bcd60e51b81526004016101f8906104d2565b60405180910390fd5b6001600160a01b0382166000908152600160205260408120805483929061022990849061050c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6000546001600160a01b0316331461029e5760405162461bcd60e51b81526004016101f8906104d2565b6001600160a01b0382166000908152600160205260409020548111156102f55760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b60448201526064016101f8565b6001600160a01b0382166000908152600160205260408120805483929061031d908490610525565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610268565b60405162461bcd60e51b81526020600482015260096024820152681cdbdd5b189bdd5b9960ba1b60448201526000906064016101f8565b6000546001600160a01b031633146103c15760405162461bcd60e51b81526004016101f8906104d2565b600080546040516001600160a01b03808516939216917f1cf2de25c5bf439ac0287061c3a0fa69b3b02867d0ccfd2ded34e42577050b7391a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b602081526000825180602084015260005b8181101561044a576020818601810151604086840101520161042d565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461048157600080fd5b919050565b6000806040838503121561049957600080fd5b6104a28361046a565b946020939093013593505050565b6000602082840312156104c257600080fd5b6104cb8261046a565b9392505050565b6020808252600a90820152693737ba1036b4b73a32b960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051f5761051f6104f6565b92915050565b8181038181111561051f5761051f6104f656fea26469706673582212203ae3c05255d091ea8a83e488ae820b2191ceb1a93205390c2fcdd263c07e034664736f6c634300081c0033","sourceMap":"58:1188:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:43;;;;;;;;;;;;;;;-1:-1:-1;;;85:43:1;;;;;;;;;;;;:::i;:::-;;;;;;;;222:21;;;;;-1:-1:-1;;;;;222:21:1;;;;;;-1:-1:-1;;;;;710:32:22;;;692:51;;680:2;665:18;222:21:1;546:203:22;180:35:1;;214:1;180:35;;;;;926:4:22;914:17;;;896:36;;884:2;869:18;180:35:1;754:184:22;874:149:1;;;;;;:::i;:::-;;:::i;:::-;;284:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1717:25:22;;;1705:2;1690:18;284:44:1;1571:177:22;134:40:1;;;;;;;;;;;;;;;-1:-1:-1;;;134:40:1;;;;;1029:215;;;;;;:::i;:::-;;:::i;779:89::-;;;;;;:::i;:::-;;:::i;:::-;;;1918:14:22;;1911:22;1893:41;;1881:2;1866:18;779:89:1;1753:187:22;639:134:1;;;;;;:::i;:::-;;:::i;874:149::-;538:6;;-1:-1:-1;;;;;538:6:1;524:10;:20;516:43;;;;-1:-1:-1;;;516:43:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;946:13:1;::::1;;::::0;;;:9:::1;:13;::::0;;;;:23;;963:6;;946:13;:23:::1;::::0;963:6;;946:23:::1;:::i;:::-;::::0;;;-1:-1:-1;;984:32:1::1;::::0;1717:25:22;;;-1:-1:-1;;;;;984:32:1;::::1;::::0;1001:1:::1;::::0;984:32:::1;::::0;1705:2:22;1690:18;984:32:1::1;;;;;;;;874:149:::0;;:::o;1029:215::-;538:6;;-1:-1:-1;;;;;538:6:1;524:10;:20;516:43;;;;-1:-1:-1;;;516:43:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1111:15:1;::::1;;::::0;;;:9:::1;:15;::::0;;;;;:25;-1:-1:-1;1111:25:1::1;1103:50;;;::::0;-1:-1:-1;;;1103:50:1;;2748:2:22;1103:50:1::1;::::0;::::1;2730:21:22::0;2787:2;2767:18;;;2760:30;-1:-1:-1;;;2806:18:22;;;2799:42;2858:18;;1103:50:1::1;2546:336:22::0;1103:50:1::1;-1:-1:-1::0;;;;;1163:15:1;::::1;;::::0;;;:9:::1;:15;::::0;;;;:25;;1182:6;;1163:15;:25:::1;::::0;1182:6;;1163:25:::1;:::i;:::-;::::0;;;-1:-1:-1;;1203:34:1::1;::::0;1717:25:22;;;1226:1:1::1;::::0;-1:-1:-1;;;;;1203:34:1;::::1;::::0;::::1;::::0;1705:2:22;1690:18;1203:34:1::1;1571:177:22::0;779:89:1;846:19;;-1:-1:-1;;;846:19:1;;3222:2:22;846:19:1;;;3204:21:22;3261:1;3241:18;;;3234:29;-1:-1:-1;;;3279:18:22;;;3272:39;838:4:1;;3328:18:22;;846:19:1;3020:332:22;639:134:1;538:6;;-1:-1:-1;;;;;538:6:1;524:10;:20;516:43;;;;-1:-1:-1;;;516:43:1;;;;;;;:::i;:::-;724:6:::1;::::0;;710:30:::1;::::0;-1:-1:-1;;;;;710:30:1;;::::1;::::0;724:6;::::1;::::0;710:30:::1;::::0;::::1;750:6;:16:::0;;-1:-1:-1;;;;;;750:16:1::1;-1:-1:-1::0;;;;;750:16:1;;;::::1;::::0;;;::::1;::::0;;639:134::o;14:527:22:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;943:173::-;1011:20;;-1:-1:-1;;;;;1060:31:22;;1050:42;;1040:70;;1106:1;1103;1096:12;1040:70;943:173;;;:::o;1121:254::-;1189:6;1197;1250:2;1238:9;1229:7;1225:23;1221:32;1218:52;;;1266:1;1263;1256:12;1218:52;1289:29;1308:9;1289:29;:::i;:::-;1279:39;1365:2;1350:18;;;;1337:32;;-1:-1:-1;;;1121:254:22:o;1380:186::-;1439:6;1492:2;1480:9;1471:7;1467:23;1463:32;1460:52;;;1508:1;1505;1498:12;1460:52;1531:29;1550:9;1531:29;:::i;:::-;1521:39;1380:186;-1:-1:-1;;;1380:186:22:o;1945:334::-;2147:2;2129:21;;;2186:2;2166:18;;;2159:30;-1:-1:-1;;;2220:2:22;2205:18;;2198:40;2270:2;2255:18;;1945:334::o;2284:127::-;2345:10;2340:3;2336:20;2333:1;2326:31;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2416:125;2481:9;;;2502:10;;;2499:36;;;2515:18;;:::i;:::-;2416:125;;;;:::o;2887:128::-;2954:9;;;2975:11;;;2972:37;;;2989:18;;:::i","linkReferences":{}},"methodIdentifiers":{"balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","mint(address,uint256)":"40c10f19","minter()":"07546172","name()":"06fdde03","setMinter(address)":"fca3b5aa","symbol()":"95d89b41","transfer(address,uint256)":"a9059cbb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"MinterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PointsToken.sol\":\"PointsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/PointsToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ncontract PointsToken {\\n    string public constant name = \\\"Hunt Points\\\";\\n    string public constant symbol = \\\"HPOINT\\\";\\n    uint8  public constant decimals = 0;\\n\\n    address public minter; // AdminMinterLeaderboard contract\\n    mapping(address => uint256) public balanceOf;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event MinterUpdated(address indexed oldMinter, address indexed newMinter);\\n\\n    modifier onlyMinter() { require(msg.sender == minter, \\\"not minter\\\"); _; }\\n\\n    constructor(address _minter) {\\n        minter = _minter;\\n    }\\n\\n    function setMinter(address _minter) external onlyMinter {\\n        emit MinterUpdated(minter, _minter);\\n        minter = _minter;\\n    }\\n\\n    function transfer(address, uint256) external pure returns (bool) { revert(\\\"soulbound\\\"); }\\n\\n    function mint(address to, uint256 amount) external onlyMinter {\\n        balanceOf[to] += amount;\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function burn(address from, uint256 amount) external onlyMinter {\\n        require(balanceOf[from] >= amount, \\\"insufficient\\\");\\n        balanceOf[from] -= amount;\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa1af45dc911476f4954122642c35ea9c5d66bcc815dfa88318e3a568fbe89d97\",\"license\":\"MIT\"}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"oldMinter","type":"address","indexed":true},{"internalType":"address","name":"newMinter","type":"address","indexed":true}],"type":"event","name":"MinterUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint"},{"inputs":[],"stateMutability":"view","type":"function","name":"minter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setMinter"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"useLiteralContent":true,"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/PointsToken.sol":"PointsToken"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/PointsToken.sol":{"keccak256":"0xa1af45dc911476f4954122642c35ea9c5d66bcc815dfa88318e3a568fbe89d97","urls":[],"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract PointsToken {\n    string public constant name = \"Hunt Points\";\n    string public constant symbol = \"HPOINT\";\n    uint8  public constant decimals = 0;\n\n    address public minter; // AdminMinterLeaderboard contract\n    mapping(address => uint256) public balanceOf;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event MinterUpdated(address indexed oldMinter, address indexed newMinter);\n\n    modifier onlyMinter() { require(msg.sender == minter, \"not minter\"); _; }\n\n    constructor(address _minter) {\n        minter = _minter;\n    }\n\n    function setMinter(address _minter) external onlyMinter {\n        emit MinterUpdated(minter, _minter);\n        minter = _minter;\n    }\n\n    function transfer(address, uint256) external pure returns (bool) { revert(\"soulbound\"); }\n\n    function mint(address to, uint256 amount) external onlyMinter {\n        balanceOf[to] += amount;\n        emit Transfer(address(0), to, amount);\n    }\n\n    function burn(address from, uint256 amount) external onlyMinter {\n        require(balanceOf[from] >= amount, \"insufficient\");\n        balanceOf[from] -= amount;\n        emit Transfer(from, address(0), amount);\n    }\n}\n","license":"MIT"}},"version":1},"id":1}